let e=0;const t=e++,s=e++,a=e++,r=e++,{ArrayBuffer:o,Atomics:n,Promise:c}=globalThis,{isArray:i}=Array,{create:p,getPrototypeOf:l,values:g}=Object,f=l(Int32Array),u=p(n),d=()=>c.withResolvers(),h=new Map,v=(t,s)=>class extends t{constructor(t,...a){super(t,...a),t instanceof s&&h.set(this,[e++,0,d()])}},w=new WeakSet,y=e=>(w.add(e),e),m=(e,s)=>{const{data:a}=e,r=i(a)&&(a.at(0)===s||a.at(1)===t&&!s);return r&&(e.stopImmediatePropagation(),e.preventDefault()),r},M=e=>null!==e&&"object"==typeof e&&!w.has(e),A=new WeakMap,k=(e,t,s)=>{if(h.has(e))t.set(e,h.get(e)[0]);else if(!(e instanceof f||e instanceof o))for(const a of g(e))M(a)&&!s.has(a)&&(s.add(a),k(a,t,s))},I=(...e)=>({value:new c((t=>{let s=new Worker("data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))");s.onmessage=()=>t("ok"),s.postMessage(e)}))}),W=(e,t,s)=>{for(const[s,a]of t)A.set(s,[a,e.currentTarget]);(({currentTarget:e,type:t,origin:s,lastEventId:a,source:r,ports:o},n)=>{e.dispatchEvent(new MessageEvent(t,{data:n,origin:s,lastEventId:a,source:r,ports:o}))})(e,s)};let{BigInt64Array:b,Int32Array:E,SharedArrayBuffer:j,Worker:x}=globalThis,D=e=>e;const T=e=>({...e,type:"module"});try{new j(4),x=class extends x{constructor(e,t){super(e,T(t))}},u.waitAsync||(u.waitAsync=I)}catch(e){const n=crypto.randomUUID(),c=new Map,i=new Map,p=(e,t,s,...a)=>{e.addEventListener(t,s,...a)},l=({serviceWorker:e},t,s)=>{let a;p(e,"message",(e=>{if(m(e,n)){const[t,s,r]=e.data,o=[s,r].join(","),c=e=>{i.delete(o),a.postMessage([n,s,r,e])},p=i.get(o);if(p)c(p);else{const{promise:e,resolve:t}=d();i.set(o,t),e.then(c)}}})),e.register(t).then((function e(t){a=t.installing||t.waiting||t.active,"activated"===a.state?s():p(a,"statechange",(()=>e(t)),{once:!0})}))};D=y,u.notify=(e,t)=>{const[a,r]=(e=>A.get(e))(e),o=[a,t].join(","),c=i.get(o);return c?c(e):i.set(o,e),r.postMessage([n,s,e,a,t]),0},u.waitAsync=(e,...t)=>{const[s,a]=((e,t)=>{const s=h.get(e),[a,r,{promise:o}]=s;return s[1]=t,[a,o]})(e,...t);return{value:a}},j=class extends o{},b=v(b,j),E=v(E,j),x=class extends x{constructor(e,o){let i=o?.serviceWorker||"";if(i){if(i=new URL(i,location.href).href,o={...o,serviceWorker:i},!c.has(i)){const{promise:e,resolve:t}=d();l(navigator,i,t),c.set(i,e)}c.get(i).then((()=>super.postMessage([n,r])))}super(e,T(o)),super.postMessage([n,t,o]),p(this,"message",(e=>{if(m(e,n)){const[t,r,...o]=e.data;switch(r){case s:((e,t,s)=>{for(const[a,[r,o,{resolve:n}]]of h)if(t===r&&s===o){for(let t=0;t<e.length;t++)a[t]=e[t];h.delete(a),n("ok");break}})(...o);break;case a:W(e,...o)}}}))}postMessage(e,...t){return super.postMessage(((e,t)=>{const s=new Map;return M(t)&&k(t,s,new Set),s.size?[e,a,s,t]:t})(n,e),...t)}}}export{u as Atomics,b as BigInt64Array,E as Int32Array,j as SharedArrayBuffer,x as Worker,D as ignore};
