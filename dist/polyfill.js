var e=Promise.withResolvers.bind(Promise);let{SharedArrayBuffer:t}=globalThis,s=!0;try{new t(4,{maxByteLength:8})}catch(e){s=!1,t=class extends ArrayBuffer{get growable(){return super.resizable}grow(e){super.resize(e)}}}const{isArray:r}=Array,{isView:o}=ArrayBuffer,{defineProperty:a,values:n}=Object,[i,l]=((t=e=>e)=>{const s=new Map;let r=0;return[()=>{let o;do{o=t(r++)}while(s.has(o));const a=e();return s.set(o,a),[o,a.promise]},(e,t,r)=>{const o=s.get(e);s.delete(e),r?o?.reject(r):o?.resolve(t)}]})();let[c,f]=i(),g=()=>f;if(s)l(c);else{globalThis.SharedArrayBuffer=t;const s=new Map,i=(e,...t)=>{e.addEventListener(...t)};if("importScripts"in globalThis){const a=(e,i,l)=>{if(l&&"object"==typeof l&&!e.has(l))if(e.add(l),o(l)){if(l instanceof Int32Array&&l.buffer instanceof t){const e=A++;return s.set(l,e),[w,e,l,i]}}else{const t=r(l)?l:n(l);for(let s=0;s<t.length;s++){const r=a(e,i,t[s]);if(r)return r}}},g=e=>function t(s,...r){if(v){const t=a(new Set,s,s);e.call(this,t||s,...r)}else f.then((()=>t(s,...r)))};globalThis.postMessage=g(globalThis.postMessage);const{prototype:h}=globalThis.MessagePort;h.postMessage=g(h.postMessage),i(self,"message",(e=>{e.stopImmediatePropagation(),l(c,e.data)}),{once:!0});const{wait:d}=Atomics,{parse:p}=JSON,u=e=>({value:e,async:!0}),b=(e,t)=>{const r=new XMLHttpRequest;return r.open("POST",`${y}?sabayon`,t),r.send(`["${w}",${s.get(e)}]`),r},m=(e,t)=>(e.set(p(t.responseText)),s.delete(e),"ok");Atomics.wait=(e,...t)=>s.has(e)?m(e,b(e,!1)):d(e,...t),Atomics.waitAsync=(t,...r)=>{if(s.has(t)){const{promise:s,resolve:r}=e(),o=b(t,!0);return o.onloadend=()=>r(m(t,o)),u(s)}return d(t,...r)};let w,y,v=!1,A=Math.random();f=f.then((e=>{[w,y]=e,v=!0}))}else{const t=crypto.randomUUID(),o=new BroadcastChannel("dd78209b-186c-4f83-80e9-406becb7d9f3");o.onmessage=async e=>{const[r,a,n]=e.data;if(a===t)for(const[e,[t,a]]of s)if(t===n){await a.promise,s.delete(e);let t=e.length;for(;t--&&!e[t];);o.postMessage([r,e.slice(0,t+1)]);break}};const n=o=>{let{data:n}=o;if(r(n)&&n.at(0)===t){const[t,r,i,l]=n;s.set(i,[r,e()]),a(o,"data",{value:l})}};globalThis.MessageChannel=class extends globalThis.MessageChannel{constructor(){super(),i(this.port1,"message",n),i(this.port2,"message",n)}},globalThis.Worker=class extends globalThis.Worker{constructor(e,s){if(!d)throw new Error("ServiceWorker not registered");super(e,s).postMessage([t,d]),i(this,"message",n)}};const{notify:h}=Atomics;Atomics.notify=(e,...t)=>{const r=s.get(e);return r?(r[1].resolve(),0):h(e,...t)};let d="",p=null;const u=(e,t)=>{let s,r=!0;e.getRegistration(d).then((s=>s??e.register(d,t))).then((function t(o){const{controller:a}=e;if(r=r&&!!a,s=o.installing||o.waiting||o.active,"activated"===s.state){if(r){if(a.scriptURL===d)return l(c);o.unregister()}location.reload()}else i(s,"statechange",(()=>t(o)),{once:!0})}))};g=(e,t)=>(p||(d=new URL(e,location.href).href,u(navigator.serviceWorker,t),p=f),p)}}var h=g;export{h as default};
